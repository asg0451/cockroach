// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cockroachdb/cockroach/pkg/sql/sem/eval (interfaces: InternalRows)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	tree "github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	gomock "github.com/golang/mock/gomock"
)

// MockInternalRows is a mock of InternalRows interface.
type MockInternalRows struct {
	ctrl     *gomock.Controller
	recorder *MockInternalRowsMockRecorder
}

// MockInternalRowsMockRecorder is the mock recorder for MockInternalRows.
type MockInternalRowsMockRecorder struct {
	mock *MockInternalRows
}

// NewMockInternalRows creates a new mock instance.
func NewMockInternalRows(ctrl *gomock.Controller) *MockInternalRows {
	mock := &MockInternalRows{ctrl: ctrl}
	mock.recorder = &MockInternalRowsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalRows) EXPECT() *MockInternalRowsMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockInternalRows) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockInternalRowsMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockInternalRows)(nil).Close))
}

// Cur mocks base method.
func (m *MockInternalRows) Cur() tree.Datums {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cur")
	ret0, _ := ret[0].(tree.Datums)
	return ret0
}

// Cur indicates an expected call of Cur.
func (mr *MockInternalRowsMockRecorder) Cur() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cur", reflect.TypeOf((*MockInternalRows)(nil).Cur))
}

// Next mocks base method.
func (m *MockInternalRows) Next(arg0 context.Context) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Next indicates an expected call of Next.
func (mr *MockInternalRowsMockRecorder) Next(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockInternalRows)(nil).Next), arg0)
}
